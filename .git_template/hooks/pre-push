#!/bin/sh

# Prevent pushing commits that don't apply to our message format

# jira regex
regex='(^[a-zA-Z]+-[1-9][0-9]*|^SPIKE|merge)'

# 40 zeros is a git thing
z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
  if [ "$local_sha" = $z40 ]
  then
    # Handle delete
    echo "Removing files. Validation skipped."
  else
    if [ "$remote_sha" = $z40 ]
    then
      # New branch, find his daddy
      # show all branches, grep non-merges, grep first non-current, get rid of parentheses
      parent=`git show-branch -a | grep '\*' | grep -m1 -v \`git rev-parse --abbrev-ref HEAD\` | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//'`
      if [ -n "$parent" ]
            then
                range="$parent..$local_sha"
            else
                range="HEAD^"
            fi
    else
      # Existing branch, check new commits
      range="$remote_sha..$local_sha"
    fi

    # Check for wrong commit message
    commit=`git rev-list -n 1 --grep="$regex" -i -E --no-merges --invert-grep "$range"`
    if [ -n "$commit" ]
    then
        echo "Push aborted. Found wrong message format in $local_ref. Commit $commit"
        echo "Please use the following format for your commits: TICKET-123 <your message> or SPIKE <your message>."
        echo "Otherwise it might corrupt automated release plans and notes."
        echo "If you feel this is a bug, run it with --no-verify to skip validation and file a bug with BATOPS."
      exit 1
    fi
  fi
done

exit 0
