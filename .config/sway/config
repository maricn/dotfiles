# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

###---Colors---###

## orange
set $bg-color 	         #b36b00
set $urgent-bg-color     #d64e4e
set $inactive-bg-color   #212121
## lila
# set $bg-color 	         #995588
# set $urgent-bg-color     #f62e4e
# set $inactive-bg-color   #311131
set $text-color          #000000
set $inactive-text-color #86888c

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00
client.placeholder      $inactive-bg-color  #0c0c0c 	       #ffffff              #212121 #262626
client.background       #212121
# class                 border  backgr. text    indicator child_border

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Font for window titles
#font pango:monospace 10
#font xft:Iosevka Term SS03:style=Regular 10
font pango:Iosevka Term SS03 10
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu wofi
set $menu dmenu_path | rofi -show run | xargs swaymsg exec --
set $menu_emojis ~/Tools/charpicker/charpicker.sh

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output "*" background "~/.cache/wallpaper" fill

# check out kanshi and ~/.config/kanshi/config for dynamic output configuration
output eDP-1 scale 1
output HDMI-A-1 res 2560x1440


### Idle configuration
#
# Example configuration:
#
exec --no-startup-id swayidle -w \
         timeout 300 "swaymsg exec 'swaylock --screenshots --clock --indicator --indicator-radius 100 --effect-scale 0.5 --effect-blur 7x5 --effect-scale 2'" \
         timeout 600 'swaymsg "output * dpms off"' \
         resume 'swaymsg "output * dpms on"' \
         before-sleep "swaymsg exec 'swaylock --screenshots --clock --indicator --indicator-radius 100 --effect-scale 0.5 --effect-blur 7x5 --effect-scale 2'" &
         #before-sleep $lock_cmd
         #before-sleep "swaymsg exec 'swaylock --screenshots --clock --indicator'" &
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:keyboard {
    repeat_delay 250
    repeat_rate 33
    # EN, RS_lat, RS_cyr, DE and no xkb based cadets
    # (use interception tools like caps2esc for cadets)
    #xkb_file ~/.dotfiles/xkb/xkb_arch.xkb
    xkb_layout us,de,rs,hr
    xkb_variant intl
    xkb_options grp:ctrls_toggle,grp_led:caps
}

# Hide mouse cursor after 10 seconds
seat * hide_cursor 10000

# Set cursor theme
set $my_cursor 2Feast
# set $my_cursor rainbow-18
set $my_cursor_size 24

seat * xcursor_theme $my_cursor $my_cursor_size
exec_always {
    gsettings set org.gnome.desktop.interface cursor-theme $my_cursor
    gsettings set org.gnome.desktop.interface cursor-size $my_cursor_size
}

input "21569:1:TADA_TADA68_Mouse" {
    natural_scroll enabled
}

input "1739:52619:SYNA8004:00_06CB:CD8B_Mouse" {
    natural_scroll enabled
}

input "7119:5:USB_Optical_Mouse" {
    natural_scroll enabled
}

input "2:10:TPPS/2_Elan_TrackPoint" {
    natural_scroll enabled
    accel_profile flat
    pointer_accel 1
}

input "1739:52619:SYNA8004:00_06CB:CD8B_Touchpad" {
    natural_scroll enabled
    tap enabled
    accel_profile adaptive
    pointer_accel 0.125
}

input "1133:16500:Logitech_G305" {
    natural_scroll enabled
}

# Some windows float by class
for_window [class="copyq"] floating enable, border pixel 6
for_window [instance="copyq"] floating enable, border pixel 6
for_window [class="mpv"] floating enable, border pixel 6
for_window [class="Cadence"] floating enable, border pixel 6
for_window [class="Xscreensaver-demo"] floating enable, border pixel 6
for_window [class="Gdebi-gtk"] floating enable, border pixel 6
for_window [class="Gpick"] floating enable, border pixel 6
for_window [class="fontforge"] floating enable, border pixel 6
for_window [class="Pavucontrol"] floating enable, border pixel 6
for_window [class="Orage"] floating enable, border pixel 6
for_window [class="Blueman-manager"] floating enable, border pixel 6
# Some windows float by app_id
for_window [app_id="blueman-manager"] floating enable, border pixel 6
for_window [app_id="pavucontrol"] floating enable, border pixel 6
for_window [app_id="mpv"] floating enable, border pixel 6
# More windows float by their window_role
for_window [window_role="pop-up"] floating enable, border pixel 6
for_window [window_role="bubble"] floating enable, border pixel 6
for_window [window_role="task_dialog"] floating enable, border pixel 6
for_window [window_role="Preferences"] floating enable, border pixel 6
for_window [window_type="dialog"] floating enable, border pixel 6
# Some but not all app windows float cherry-picked
for_window [class="Ripcord" title="((Search Messages|Channels|Files|Members|Threads Overview|Mentions) - .*|Bookmarks|Add Emoji Reaction|Start Thread|Preferences)"] floating enable, border pixel 6
# Some windows float over all workspaces
for_window [class="mpv"] sticky enable
for_window [app_id="mpv"] sticky enable

# not working (tried on a dummy filter too)
# for_window [name="^.*@production-.*$"] title_format "<span background='#ff0000'>%title</span>"

for_window [class="firefox"] inhibit_idle fullscreen
for_window [app_id="mpv"] inhibit_idle fullscreen
for_window [class="vlc"] inhibit_idle fullscreen
for_window [class="Chromium"] inhibit_idle fullscreen

# Some windows are assigned to workspaces
assign [class="Slack"] 1
assign [class="Signal"] 1
assign [class="Signal Beta"] 1
assign [class="tutanota"] 1
assign [class="KeePassXC"] 1
assign [class="Firefox Developer Edition" window_type="normal"] 2
assign [class="firefox" window_type="normal"] 2
assign [class="Steam"] 5
assign [class="Chromium" window_type="normal"] 3
# new_window 1pixel
# new_float normal


### Key bindings {{{
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+Shift+d exec $menu_emojis
    bindsym $mod+Tab exec --no-startup-id $menu_window_switcher

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+x exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Input shortcuts
    # bindsym $mod+Control+slash exec --no-startup-id "~/.config/i3/toggle-colemak"
    # bindsym $mod+Control+k exec --no-startup-id "~/.xinitrc-keyboard-remap"
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    
    # multi monitor setup
    workspace 1 output HDMI-A-1 DP-2 eDP-1
    workspace 2 output HDMI-A-1 DP-2 eDP-1
    workspace 3 output HDMI-A-1 DP-2 eDP-1
    workspace 4 output HDMI-A-1 DP-2 eDP-1
    workspace 5 output HDMI-A-1 DP-2 eDP-1
    workspace 6 output eDP-1 DP-2 HDMI-A-1
    workspace 7 output eDP-1 DP-2 HDMI-A-1
    workspace 8 output eDP-1 DP-2 HDMI-A-1
    workspace 9 output eDP-1 DP-2 HDMI-A-1
    workspace 10 output eDP-1 DP-2 HDMI-A-1
    bindsym $mod+Mod1+h move workspace to output HDMI-A-1
    bindsym $mod+Mod1+e move workspace to output eDP-1

    # Move around workspaces relative to the current one
    bindsym $mod+Ctrl+h workspace prev
    bindsym $mod+Ctrl+l workspace next
    bindsym $mod+Shift+Ctrl+h move container to workspace prev
    bindsym $mod+Shift+Ctrl+l move container to workspace next

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    # bindsym $mod+v splitv
    # bindsym $mod+backslash  split horizontal
    # bindsym $mod+bar        split horizontal
    # bindsym $mod+percent    split horizontal
    # bindsym $mod+quotedbl   split vertical
    bindsym $mod+apostrophe split vertical

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen
    bindsym $mod+semicolon fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle; \
        [tiling con_id=__focused__] border none; \
        [floating con_id=__focused__] border pixel 4;


    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

bindsym $mod+Shift+y	        resize shrink width 5 px or 5 ppt
bindsym $mod+Shift+u		resize shrink height 5 px or 5 ppt
bindsym $mod+Shift+i		resize grow height 5 px or 5 ppt
bindsym $mod+Shift+o		resize grow width 5 px or 5 ppt

# Lock
bindsym Control+Mod1+l exec $lock_cmd

# Screenshot
#bindsym $mod+P --release exec "flameshot full -c"
#bindsym $mod+Shift+P exec "flameshot full -d 2000 -c"
for_window [title="imv.*screenshot"] floating enable
for_window [title="imv.*screenshot"] fullscreen on
bindsym $mod+P --release exec "grim screen -"
bindsym $mod+Shift+P exec 'geo="$(slurp)" && sleep 2 && grim -g "$geo" - | swappy -f -'
bindsym $mod+Mod1+P exec 'grim -g "$(swaymsg -t get_tree | jq -r '"'"'.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"'"'"' | slurp)" - | swappy -f -'
#bindsym $mod+Shift+P exec "~/Tools/screenshot.sh 2>&1 >~/log"

# Media keys
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# System exit
mode "exit: [x]sway, [l]ock, [s]leep, [r]eboot, [p]oweroff" {
  bindsym x mode "default", exec swaymsg exit
  bindsym l mode "default", exec $lock_cmd
  bindsym r mode "default", exec systemctl reboot
  bindsym s mode "default", exec systemctl suspend
  bindsym p mode "default", exec shutdown --poweroff now
  bindsym Escape mode "default"
  bindsym Return mode "default"
  bindsym $mod+x mode "default"
}
bindsym $mod+x mode "exit: [x]sway, [l]ock, [s]leep, [r]eboot, [p]oweroff"

# Key Bindings END }}}

#
# Status Bar: {{{
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar

    font xft:Iosevka Term SS03:style=Regular

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
}

# }}} Status Bar

# i3-gaps {{{
    smart_gaps on
    gaps inner 6
    gaps outer 2
    bindsym $mod+z              gaps outer current plus 1
    bindsym $mod+Shift+z        gaps outer current minus 1
    bindsym $mod+Mod1+z         gaps inner current plus 1
    bindsym $mod+Mod1+Shift+z   gaps inner current minus 1
    
    for_window [class=".*"] border pixel 2
    for_window [class="X-terminal-emulator"] border pixel 3
    for_window [class="firefox" window_type="normal"] border pixel 3
    for_window [app_id="Alacritty"] border pixel 3
    for_window [app_id="swappy"] border pixel 6
    focus_follows_mouse         no
    # don't steal focus if window is a pop-up
    no_focus [window_role="pop-up"]
    # don't steal focus when a window activates, just mark it as urgent [default: smart]
    focus_on_window_activation urgent
    # window border settings (floating_border is not working, dunno why)
    default_border              none
    default_floating_border     pixel 6
    # hide borders adjacent to the screen edges
    hide_edge_borders           none
# }}} i3-gaps

include /etc/sway/config.d/*
include ~/.config/sway/config.d/*

exec "systemctl --user import-environment"
